// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ggg_test_server.proto

#include "ggg_test_server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ggg_test_server {

inline constexpr TestRsp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestRsp::TestRsp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRspDefaultTypeInternal() {}
  union {
    TestRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRspDefaultTypeInternal _TestRsp_default_instance_;

inline constexpr TestReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestReq::TestReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestReqDefaultTypeInternal() {}
  union {
    TestReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestReqDefaultTypeInternal _TestReq_default_instance_;
}  // namespace ggg_test_server
static ::_pb::Metadata file_level_metadata_ggg_5ftest_5fserver_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ggg_5ftest_5fserver_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ggg_5ftest_5fserver_2eproto = nullptr;
const ::uint32_t TableStruct_ggg_5ftest_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ggg_test_server::TestReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ggg_test_server::TestReq, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::ggg_test_server::TestReq, _impl_.tid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ggg_test_server::TestRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ggg_test_server::TestRsp, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::ggg_test_server::TestRsp, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ggg_test_server::TestReq)},
        {10, -1, -1, sizeof(::ggg_test_server::TestRsp)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ggg_test_server::_TestReq_default_instance_._instance,
    &::ggg_test_server::_TestRsp_default_instance_._instance,
};
const char descriptor_table_protodef_ggg_5ftest_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\025ggg_test_server.proto\022\017ggg_test_server"
    "\"#\n\007TestReq\022\013\n\003uid\030\001 \001(\t\022\013\n\003tid\030\002 \001(\t\"\'\n"
    "\007TestRsp\022\013\n\003uid\030\001 \001(\t\022\017\n\007message\030\002 \001(\t2W"
    "\n\rGggTestServer\022F\n\016TestReqService\022\030.ggg_"
    "test_server.TestReq\032\030.ggg_test_server.Te"
    "stRsp\"\000B3\n\020io.grpc.ggg.testB\rGggTestServ"
    "erP\001\242\002\rGggTestServerb\006proto3"
};
static ::absl::once_flag descriptor_table_ggg_5ftest_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ggg_5ftest_5fserver_2eproto = {
    false,
    false,
    268,
    descriptor_table_protodef_ggg_5ftest_5fserver_2eproto,
    "ggg_test_server.proto",
    &descriptor_table_ggg_5ftest_5fserver_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_ggg_5ftest_5fserver_2eproto::offsets,
    file_level_metadata_ggg_5ftest_5fserver_2eproto,
    file_level_enum_descriptors_ggg_5ftest_5fserver_2eproto,
    file_level_service_descriptors_ggg_5ftest_5fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ggg_5ftest_5fserver_2eproto_getter() {
  return &descriptor_table_ggg_5ftest_5fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ggg_5ftest_5fserver_2eproto(&descriptor_table_ggg_5ftest_5fserver_2eproto);
namespace ggg_test_server {
// ===================================================================

class TestReq::_Internal {
 public:
};

TestReq::TestReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ggg_test_server.TestReq)
}
inline PROTOBUF_NDEBUG_INLINE TestReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uid_(arena, from.uid_),
        tid_(arena, from.tid_),
        _cached_size_{0} {}

TestReq::TestReq(
    ::google::protobuf::Arena* arena,
    const TestReq& from)
    : ::google::protobuf::Message(arena) {
  TestReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ggg_test_server.TestReq)
}
inline PROTOBUF_NDEBUG_INLINE TestReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uid_(arena),
        tid_(arena),
        _cached_size_{0} {}

inline void TestReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestReq::~TestReq() {
  // @@protoc_insertion_point(destructor:ggg_test_server.TestReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.tid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ggg_test_server.TestReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_.ClearToEmpty();
  _impl_.tid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> TestReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string tid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestReq, _impl_.tid_)}},
    // string uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestReq, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uid = 1;
    {PROTOBUF_FIELD_OFFSET(TestReq, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tid = 2;
    {PROTOBUF_FIELD_OFFSET(TestReq, _impl_.tid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\3\3\0\0\0\0\0"
    "ggg_test_server.TestReq"
    "uid"
    "tid"
  }},
};

::uint8_t* TestReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ggg_test_server.TestReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ggg_test_server.TestReq.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string tid = 2;
  if (!this->_internal_tid().empty()) {
    const std::string& _s = this->_internal_tid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ggg_test_server.TestReq.tid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ggg_test_server.TestReq)
  return target;
}

::size_t TestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ggg_test_server.TestReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  // string tid = 2;
  if (!this->_internal_tid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestReq::_class_data_ = {
    TestReq::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TestReq::GetClassData() const {
  return &_class_data_;
}

void TestReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestReq*>(&to_msg);
  auto& from = static_cast<const TestReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ggg_test_server.TestReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_tid().empty()) {
    _this->_internal_set_tid(from._internal_tid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestReq::CopyFrom(const TestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ggg_test_server.TestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestReq::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestReq::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestReq::InternalSwap(TestReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tid_, &other->_impl_.tid_, arena);
}

::google::protobuf::Metadata TestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ggg_5ftest_5fserver_2eproto_getter, &descriptor_table_ggg_5ftest_5fserver_2eproto_once,
      file_level_metadata_ggg_5ftest_5fserver_2eproto[0]);
}
// ===================================================================

class TestRsp::_Internal {
 public:
};

TestRsp::TestRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ggg_test_server.TestRsp)
}
inline PROTOBUF_NDEBUG_INLINE TestRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uid_(arena, from.uid_),
        message_(arena, from.message_),
        _cached_size_{0} {}

TestRsp::TestRsp(
    ::google::protobuf::Arena* arena,
    const TestRsp& from)
    : ::google::protobuf::Message(arena) {
  TestRsp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ggg_test_server.TestRsp)
}
inline PROTOBUF_NDEBUG_INLINE TestRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uid_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void TestRsp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestRsp::~TestRsp() {
  // @@protoc_insertion_point(destructor:ggg_test_server.TestRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRsp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ggg_test_server.TestRsp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> TestRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestRsp, _impl_.message_)}},
    // string uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestRsp, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uid = 1;
    {PROTOBUF_FIELD_OFFSET(TestRsp, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(TestRsp, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\3\7\0\0\0\0\0"
    "ggg_test_server.TestRsp"
    "uid"
    "message"
  }},
};

::uint8_t* TestRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ggg_test_server.TestRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ggg_test_server.TestRsp.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ggg_test_server.TestRsp.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ggg_test_server.TestRsp)
  return target;
}

::size_t TestRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ggg_test_server.TestRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRsp::_class_data_ = {
    TestRsp::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TestRsp::GetClassData() const {
  return &_class_data_;
}

void TestRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRsp*>(&to_msg);
  auto& from = static_cast<const TestRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ggg_test_server.TestRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRsp::CopyFrom(const TestRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ggg_test_server.TestRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRsp::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestRsp::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestRsp::InternalSwap(TestRsp* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata TestRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ggg_5ftest_5fserver_2eproto_getter, &descriptor_table_ggg_5ftest_5fserver_2eproto_once,
      file_level_metadata_ggg_5ftest_5fserver_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ggg_test_server
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
